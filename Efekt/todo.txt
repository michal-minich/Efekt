* fix: parse/eval fn apply as second operand
* fix: do not parse op apply after line break (brace starts at the new line)
* fix: declaring var in loop now fails with already declared
* fix: parsing of comment
fix various crashes - (build on prelude/wrong paths?, not matching braces)
reevaluate all the safe casts to nicer mesages
error - when loop does not have break or return statement inside (to prevent infinite loop)
validate usage of break and continue outside loop
warn when declaring variable of type void
info when return can be skipped
validate inequal count of params and args
import candidates - nicer output with location
import - print info when importing the same module in inner scope
import - warn on duplicate import in same scope
more tests
static validation where possible
nicer code

rerport elements details on warning
elements holds its tokens
report line column range with error
prog runtime writter output (for throw)

how to reolve nested module names vs paths
resolve imports based on lib folder?
project config file? (instaed of cmd args)

not operator - how?
more and thought out builtins
Double type
interators
? label goto
public attribute
attributes in general?
? ref
? function overloading (introduces polymorphism and introspection)
? contracts: requires, ensures, assert, assume, invariant (scope, loop, fn body, object body)

allow only typed functions to be called as extensions
builtins as extension methods (when typing for builtins is done)

convert to JS, D, C#